name: Release To Maven

# Run workflow on commits to the `master` branch
on:
   workflow_dispatch:
    inputs:
      Version:
        description: "Version to be released in format: x.y.z, where x => major version, y => minor version and z => patch version"
        required: true
        default: "0.1.0"
      Title:
        description: "Title of the release"
        required: true
        default: "Improving API developer experience"

jobs:
  publish:
    name: Creating release version
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 8
          
      - name: Update version in pom.xml (Release only)
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.Version }} -DgenerateBackupPoms=false
      - name: Run the Action
        uses: devops-infra/action-commit-push@master
        with:
           github_token: "${{ secrets.TOKEN_GITHUB }}"
           add_timestamp: true
           commit_prefix: "[ci skip]"
           commit_message: "Update pom.xml"
           force: false
           target_branch: main
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          branch: ${{ github.ref }}
      - name: Create Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          custom_tag: ${{ github.event.inputs.Version }}
          tag_prefix: ""
          
      - name: Create release
        uses: ncipollo/release-action@v1
        with: 
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ github.event.inputs.Title }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY  }}
          gpg_passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD  }}
          nexus_username: ${{ secrets.OSSRH_USERNAME  }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
